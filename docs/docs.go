// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/post/": {
            "get": {
                "description": "List blog posts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Post"
                ],
                "summary": "List blog posts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lead",
                        "name": "lead",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "created_from",
                        "name": "created_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "created_to",
                        "name": "created_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "last_updated_from",
                        "name": "last_updated_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "last_updated_to",
                        "name": "last_updated_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order_by",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.BlogPostListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/api/post/{id}": {
            "get": {
                "description": "Get a blog post by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Post"
                ],
                "summary": "Get a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (int)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.BlogPostResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a blog post by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Post"
                ],
                "summary": "Update a blog post",
                "parameters": [
                    {
                        "description": "Update Blog Post",
                        "name": "data.BlogPost",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.BlogPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.UpdateBlogResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Post a blog post by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Post"
                ],
                "summary": "Post a blog post",
                "parameters": [
                    {
                        "description": "Push Blog Post",
                        "name": "BlogPostRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.BlogPostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.BlogPostResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a blog post by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Post"
                ],
                "summary": "Delete a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (int)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.UpdateBlogResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/api/social/": {
            "get": {
                "description": "List social data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social"
                ],
                "summary": "List social data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "social_platform",
                        "name": "social_platform",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.SocialListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/api/social/{id}": {
            "get": {
                "description": "Get social data by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social"
                ],
                "summary": "Get social data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (int)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.SocialResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Update social data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social"
                ],
                "summary": "Update social data",
                "parameters": [
                    {
                        "description": "Update Social Data",
                        "name": "data.Social",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.Social"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.UpdateSocialResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Post social data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social"
                ],
                "summary": "Post social data",
                "parameters": [
                    {
                        "description": "Push social data",
                        "name": "SocialPostRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.SocialPostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.SocialResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete social data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social"
                ],
                "summary": "Delete social data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (int)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.UpdateSocialResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/api/user/{id}": {
            "get": {
                "description": "Get user data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID (int)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.UserPostResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user data",
                "parameters": [
                    {
                        "description": "Update User",
                        "name": "data.User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.UpdateUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/v1/healthcheck": {
            "get": {
                "description": "Endpoint to check if the API is running",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthcheck"
                ],
                "summary": "Healthcheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.HealthCheckMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "data.BlogPost": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_update": {
                    "type": "string"
                },
                "lead": {
                    "type": "string"
                },
                "post": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "data.Metadata": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "first_page": {
                    "type": "integer"
                },
                "last_page": {
                    "type": "integer"
                },
                "order_by": {
                    "type": "string"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_records": {
                    "type": "integer"
                }
            }
        },
        "data.Social": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "social_platform": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "data.User": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "main.BlogPostListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/data.BlogPost"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/data.Metadata"
                }
            }
        },
        "main.BlogPostRequest": {
            "type": "object",
            "properties": {
                "lead": {
                    "type": "string"
                },
                "post_content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "main.BlogPostResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/data.BlogPost"
                },
                "metadata": {
                    "$ref": "#/definitions/data.Metadata"
                }
            }
        },
        "main.ErrorMessage": {
            "type": "object",
            "properties": {
                "message": {}
            }
        },
        "main.HealthCheckMessage": {
            "type": "object",
            "properties": {
                "environment": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "main.SocialListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/data.Social"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/data.Metadata"
                }
            }
        },
        "main.SocialPostRequest": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                },
                "social_platform": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "main.SocialResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/data.Social"
                },
                "metadata": {
                    "$ref": "#/definitions/data.Metadata"
                }
            }
        },
        "main.UpdateBlogResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "rows_affected": {
                    "type": "integer"
                }
            }
        },
        "main.UpdateSocialResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "rows_affected": {
                    "type": "integer"
                }
            }
        },
        "main.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "rows_affected": {
                    "type": "integer"
                }
            }
        },
        "main.UserPostResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/data.User"
                },
                "metadata": {
                    "$ref": "#/definitions/data.Metadata"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Textonly API",
	Description:      "Textonly API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
