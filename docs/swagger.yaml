definitions:
  data.BlogPost:
    properties:
      created:
        type: string
      id:
        type: integer
      last_update:
        type: string
      lead:
        type: string
      post:
        type: string
      title:
        type: string
    type: object
  data.Metadata:
    properties:
      current_page:
        type: integer
      first_page:
        type: integer
      last_page:
        type: integer
      order_by:
        type: string
      page_size:
        type: integer
      total_records:
        type: integer
    type: object
  data.Social:
    properties:
      id:
        type: integer
      link:
        type: string
      social_platform:
        type: string
      user_id:
        type: integer
    type: object
  data.User:
    properties:
      content:
        type: string
      id:
        type: integer
      name:
        type: string
      summary:
        type: string
    type: object
  main.BlogPostListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/data.BlogPost'
        type: array
      metadata:
        $ref: '#/definitions/data.Metadata'
    type: object
  main.BlogPostRequest:
    properties:
      lead:
        type: string
      post_content:
        type: string
      title:
        type: string
    type: object
  main.BlogPostResponse:
    properties:
      data:
        $ref: '#/definitions/data.BlogPost'
      metadata:
        $ref: '#/definitions/data.Metadata'
    type: object
  main.ErrorMessage:
    properties:
      message: {}
    type: object
  main.HealthCheckMessage:
    properties:
      environment:
        type: string
      status:
        type: string
      version:
        type: string
    type: object
  main.SocialListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/data.Social'
        type: array
      metadata:
        $ref: '#/definitions/data.Metadata'
    type: object
  main.SocialPostRequest:
    properties:
      link:
        type: string
      social_platform:
        type: string
      user_id:
        type: integer
    type: object
  main.SocialResponse:
    properties:
      data:
        $ref: '#/definitions/data.Social'
      metadata:
        $ref: '#/definitions/data.Metadata'
    type: object
  main.UpdateBlogResponse:
    properties:
      id:
        type: integer
      message:
        type: string
      rows_affected:
        type: integer
    type: object
  main.UpdateSocialResponse:
    properties:
      id:
        type: integer
      message:
        type: string
      rows_affected:
        type: integer
    type: object
  main.UpdateUserResponse:
    properties:
      message:
        type: string
      rows_affected:
        type: integer
    type: object
  main.UserPostResponse:
    properties:
      data:
        $ref: '#/definitions/data.User'
      metadata:
        $ref: '#/definitions/data.Metadata'
    type: object
info:
  contact: {}
  description: Textonly API
  title: Textonly API
  version: "1.0"
paths:
  /api/post/:
    get:
      description: List blog posts
      parameters:
      - description: id
        in: query
        name: id
        type: integer
      - description: title
        in: query
        name: title
        type: string
      - description: lead
        in: query
        name: lead
        type: string
      - description: created_from
        in: query
        name: created_from
        type: string
      - description: created_to
        in: query
        name: created_to
        type: string
      - description: last_updated_from
        in: query
        name: last_updated_from
        type: string
      - description: last_updated_to
        in: query
        name: last_updated_to
        type: string
      - description: order_by
        in: query
        name: order_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BlogPostListResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorMessage'
      summary: List blog posts
      tags:
      - Blog Post
  /api/post/{id}:
    delete:
      description: Delete a blog post by ID
      parameters:
      - description: ID (int)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.UpdateBlogResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorMessage'
      summary: Delete a blog post
      tags:
      - Blog Post
    get:
      description: Get a blog post by ID
      parameters:
      - description: ID (int)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BlogPostResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorMessage'
      summary: Get a blog post
      tags:
      - Blog Post
    post:
      description: Post a blog post by ID
      parameters:
      - description: Push Blog Post
        in: body
        name: BlogPostRequest
        required: true
        schema:
          $ref: '#/definitions/main.BlogPostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BlogPostResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorMessage'
      summary: Post a blog post
      tags:
      - Blog Post
    put:
      description: Update a blog post by ID
      parameters:
      - description: Update Blog Post
        in: body
        name: data.BlogPost
        required: true
        schema:
          $ref: '#/definitions/data.BlogPost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.UpdateBlogResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorMessage'
      summary: Update a blog post
      tags:
      - Blog Post
  /api/social/:
    get:
      description: List social data
      parameters:
      - description: id
        in: query
        name: id
        type: integer
      - description: user_id
        in: query
        name: user_id
        type: integer
      - description: social_platform
        in: query
        name: social_platform
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.SocialListResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorMessage'
      summary: List social data
      tags:
      - Social
  /api/social/{id}:
    delete:
      description: Delete social data
      parameters:
      - description: ID (int)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.UpdateSocialResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorMessage'
      summary: Delete social data
      tags:
      - Social
    get:
      description: Get social data by ID
      parameters:
      - description: ID (int)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.SocialResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorMessage'
      summary: Get social data
      tags:
      - Social
    post:
      description: Post social data
      parameters:
      - description: Push social data
        in: body
        name: SocialPostRequest
        required: true
        schema:
          $ref: '#/definitions/main.SocialPostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.SocialResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorMessage'
      summary: Post social data
      tags:
      - Social
    put:
      description: Update social data
      parameters:
      - description: Update Social Data
        in: body
        name: data.Social
        required: true
        schema:
          $ref: '#/definitions/data.Social'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.UpdateSocialResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorMessage'
      summary: Update social data
      tags:
      - Social
  /api/user/{id}:
    get:
      description: Get user data
      parameters:
      - description: ID (int)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.UserPostResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorMessage'
      summary: Get user data
      tags:
      - User
    put:
      description: Update user data
      parameters:
      - description: Update User
        in: body
        name: data.User
        required: true
        schema:
          $ref: '#/definitions/data.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.UpdateUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/main.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorMessage'
      summary: Update user data
      tags:
      - User
  /v1/healthcheck:
    get:
      description: Endpoint to check if the API is running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.HealthCheckMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorMessage'
      summary: Healthcheck
      tags:
      - healthcheck
swagger: "2.0"
